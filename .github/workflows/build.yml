name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # , macos-latest, windows-latest
        os: [ubuntu-latest]
        arch: [x86_64, aarch64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Set SSL backend (Unix)
        if: runner.os != 'Windows'
        run: |
          echo "OPENSSL_DIR=/usr/local/ssl" >> $GITHUB_ENV
          echo "OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV
          echo "RUSTFLAGS=-C target-feature=+crt-static" >> $GITHUB_ENV

      - name: Build backend
        run: cargo build

      - name: Upload artifact (Linux)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-latest-romichan-server
          path: target/debug/romichan

      - name: Upload artifact (Linux aarch64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-latest-romichan-server-aarch64
          path: target/debug/romichan

      - name: Upload artifact (macOS)
        if: matrix.os == 'macos-latest' && matrix.arch == 'x86_64'
        uses: actions/upload-artifact@v4
        with:
          name: macos-latest-romichan-server
          path: target/debug/romichan

      - name: Upload artifact (macOS aarch64)
        if: matrix.os == 'macos-latest' && matrix.arch == 'aarch64'
        uses: actions/upload-artifact@v4
        with:
          name: macos-latest-romichan-server-aarch64
          path: target/debug/romichan

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest' && matrix.arch == 'x86_64'
        uses: actions/upload-artifact@v4
        with:
          name: windows-latest-romichan-server
          path: target/debug/romichan.exe

      - name: Upload artifact (Windows aarch64)
        if: matrix.os == 'windows-latest' && matrix.arch == 'aarch64'
        uses: actions/upload-artifact@v4
        with:
          name: windows-latest-romichan-server-aarch64
          path: target/debug/romichan.exe

      - name: Set up Node.js
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Build frontend
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
        run: |
          pnpm install --no-frozen-lockfile
          pnpm build
          tar -czf dist.tar.gz dist

      - name: Upload artifact (Frontend)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
        uses: actions/upload-artifact@v4
        with:
          name: romichan-client
          path: dist.tar.gz
